// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Verifier = artifacts.require("Verifier");
const verifyZKProof = require("../../zokrates/code/square/proof.json");
// Test verification with correct proof
contract("TestVerifier", (accounts) => {
  const owner = accounts[0];

  beforeEach(async () => {
    this.contract = await Verifier.new({ from: owner });
  });

  // Test verification with correct proof
  it("should verify zero knowledge proof correctly", async () => {
    let result = await this.contract.verifyTx.call(
      verifyZKProof.proof.a,
      verifyZKProof.proof.b,
      verifyZKProof.proof.c,
      verifyZKProof.inputs
    );
    assert.equal(result, true);
  });

  // Test verification with incorrect proof input
  it("should not verify proof if incorrect inputs", async () => {
    let result = await this.contract.verifyTx.call(
      verifyZKProof.proof.a,
      verifyZKProof.proof.b,
      verifyZKProof.proof.c,
      [64736, 92342]
    );
    assert.equal(result, false);
  });
});
